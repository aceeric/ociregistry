# -- Specifies the images. You can populate `tag` or `digest` or both.
# @default -- see sub-fields
image:
  ociregistry:
    # -- The image registry
    registry: quay.io
    # -- The image repository
    repository: appzygy/ociregistry
    # -- The image tag
    tag: 1.8.0
    # -- Specify a digest to use instead of the tag
    digest:
    # -- The image pull policy
    pullPolicy: IfNotPresent

# -- Supports pulling the image from a registry that requires authentication
imagePullSecrets: []

# -- Overrides the default naming logic.
nameOverride: ""

# -- Overrides the default naming logic.
fullnameOverride: ""

# -- Defines the service account configuration
# @default -- See sub-fields
serviceAccount:
  # -- Creates a service account for the server
  create: true
  # -- Automounts a token
  automount: true
  # -- Provide any additional annotations you need
  annotations: {}
  # -- Overrides the default service name
  name: ""

# -- Provide any additional pod annotations
podAnnotations: {}

# -- Provide any additional pod labels
podLabels: {}

# -- Provide any additional pod security context
podSecurityContext: {}

# -- Provide any additional deployment security context
securityContext: {}

# -- service defines the Service resource. To serve inside the cluster for
# other cluster workloads, specify `NodePort`. To serve behind an ingress
# for workloads outside the cluster, specify `ClusterIP`
# @default -- See sub-fields
service:
  type: NodePort
  nodePort: 31080
  port: 8080

# -- Configures an ingress for access to the registry outside the cluster. (Could
# be used to run the registry in one cluster to cache for multiple other clusters.)
# @default -- `enabled: false`
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #- secretName: chart-example-tls
  #  hosts:
  #  - chart-example.local

# -- Specify requests and limits. Manifests are cached in memory to speed response
# time. Manifests vary greatly in size but - if an average manifest is 3K and your
# cluster has 100 images this would result in the server using 300K of RAM. Blob
# digests are also cached (only the digests) which consumes about 80 bytes per blob.
resources: {}

# -- Use this to mount other volumes.
volumes: []

# -- Volume Mounts provides the container mount paths. Since this is a caching
# registry it needs a place to store image data.
# @default -- See sub-fields
volumeMounts:

# -- Specifies  where to mount the storage for the image cache.
- name: images
  # -- Shows the default value hard-coded into the server unless overridden
  mountPath: /var/lib/ociregistry
  readOnly: false

# -- Defines a node selector
nodeSelector: {}

# -- Defines Pod tolerations
tolerations: []

# -- Defines Pod affinity
affinity: {}

# -- Persistence establishes the persistence strategy. For ephemeral storage (i.e. for
# testing or experimentation) the `emptyDir` option is enabled by default. If you have a storage
# provisioner, enable the `persistentVolumeClaim` option. The `hostPath` option uses
# host storage.
# @default -- See sub-fields
persistence:
  # -- Creates a PVC for persistent storage
  # @default -- See sub-fields
  persistentVolumeClaim:
    # -- Persistent storage is disabled by default. Set to `true` to enable persistent storage
    enabled: false
    # -- If you will bind to an existing PVC, specify the name here, otherwise leave
    # the name blank and fill in the `newClaimSpec` hash.
    existingClaimName: ""
    # -- Supply the parameters for a new PVC
    # @default -- See sub-fields
    newClaimSpec:
      # -- Access mode(s) supported by the storage class
      accessModes:
      - ReadWriteOnce
      # -- Volume mode supported by the storage class
      volumeMode: Filesystem
      # -- Required storage capacity
      resources:
        requests:
          storage: 2Gi
      # -- Leave the storage class empty to select the default cluster storage
      # class, or specify a class if multiple are available
      storageClassName: ""
      # -- specify any necessary storage selectors.
      selector: {}
      #  matchLabels: {}
      #  matchExpressions: []
  # -- Implements host path storage for the server. Suitable for testing and a quick
  # capability evaluation.
  # @default -- See sub-fields
  hostPath:
    # -- Host path is disabled by default
    enabled: false
    type: DirectoryOrCreate
    # -- By default the server will use this path for image storage. If you mount the
    # storage at some other path you must match it in the `imagePath` value in
    # `serverConfig.config` below.
    path: /var/lib/ociregistry
  # -- Implements Empty Dir storage for the server. Suitable for testing and a quick
  # capability evaluation.
  # @default -- See sub-fields
  emptyDir:
    # -- This is the default option to facilitate a quick start
    enabled: true
    # -- Provides a size limit to the storage
    sizeLimit: 2Gi

# -- Supports overriding default (built-in) configuration. If you change
# `serverConfig.config.imagePath` then change `volumeMounts['image'].mountPath`
# to match. The values shown are the defaults hard-coded in the binary, except
# for `logLevel` which defaults to `error` and is overridden below as `info`.
# The explicit values are provided mainly for documentation purposes. OS and
# arch by default are determined by the system hosting the server.
# @default -- See sub-fields
serverConfig:
  mountPath: /var/ociregistry/config
  config:
    imagePath: /var/lib/ociregistry
    logLevel: info
    logFile:
    preloadImages:
    imageFile:
    port: 8080
    #os: linux
    #arch: amd64
    pullTimeout: 60000
    alwaysPullLatest: false
    airGapped: false
    helloWorld: false
    registries: []
    pruneConfig:
      enabled: false
      duration: 30d
      type: accessed
      frequency: 1d
      count: -1
      dryRun: false
